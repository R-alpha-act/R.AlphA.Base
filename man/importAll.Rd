% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/importAll.R
\name{importAll}
\alias{importAll}
\title{Function to Import and Concatenate Multiple Files}
\usage{
importAll(
  path = ".",
  pattern = "",
  ignore.case = FALSE,
  importFunction = NULL,
  fill = F,
  fileList = NULL
)
}
\arguments{
\item{path}{Path to the directory, passed to `list.files`.}

\item{pattern}{Pattern to match file names, passed to `list.files`.}

\item{ignore.case}{Logical. If `TRUE`, ignores case when matching file names.
Passed to `list.files`.}

\item{importFunction}{A custom function for importing files. If not set, the
function automatically selects an import method based on the file extension.}

\item{fill}{Logical. Passed to `rbind` to allow filling missing columns.}

\item{fileList}{A character vector of file names to import
(used instead of `pattern`).}
}
\value{
A data frame containing the concatenated table.
}
\description{
Imports all selected files, concatenates them into a single
table, and adds an `fName` variable.
}
\examples{
# Directory containing test files
test_path <- tempdir()

# Create test files
write.csv(data.frame(a = 1:3, b = 4:6), file.path(test_path, "file1.csv"))
write.csv(data.frame(a = 7:9, b = 10:12), file.path(test_path, "file2.csv"))

# Example 1 : Import and concatenate the files
result <- importAll(path = test_path)
print(result)

# Example 2: Import files using fileList
file_list <- c("file1.csv", "file2.csv")
result <- importAll(path = test_path, fileList = file_list)
print(result)

# Example 3: Import .rds files
saveRDS(data.frame(a = 1:5, b = 6:10), file.path(test_path, "file1.rds"))
saveRDS(data.frame(a = 11:15, b = 16:20), file.path(test_path, "file2.rds"))
result <- importAll(path = test_path, pattern = "\\\\.rds$")
print(result)

# Example 4: Custom import function
custom_import <- function(file) {
  data <- read.csv(file, stringsAsFactors = FALSE)
  return(data)
}
result <- importAll(path = test_path, pattern = "\\\\.csv$", importFunction = custom_import)
print(result)
}
